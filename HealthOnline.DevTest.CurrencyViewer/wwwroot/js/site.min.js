function ViewModel(){var n=this;n.datasources=ko.observableArray();n.listOfCurrencies=ko.observableArray();n.listOfProviders=ko.observableArray();n.selectedCurrency1=ko.observable();n.selectedCurrency2=ko.observable();n.selectedProvider=ko.observable();n.amountForCalculation=ko.observable();n.selectedCurrencyForCalculation=ko.observable();n.selectedCurrencyForCalculation2=ko.observable()}function getAverage(n){var r=model.datasources().length,u=0,t,i;if(r>0){for(t=0;t<r;t++)for(i=0;i<model.datasources()[t].currencies.length;i++)model.datasources()[t].currencies[i].name===n&&(u+=model.datasources()[t].currencies[i].rate);return(u/r).toFixed(2)}return"waiting for data"}function convertBetweenProvider(n){for(var r=0,i=0,t=0;t<n.currencies.length;t++){if(r<0&&i<0)break;n.currencies[t].name===model.selectedCurrency1()&&(r=n.currencies[t].rate);n.currencies[t].name===model.selectedCurrency2()&&(i=n.currencies[t].rate)}return i>0?(r/i).toFixed(4):0}function calculate(n,t,i,r){var e=0,o=0,u,f;if(n()>=0){for(u=0;u<model.datasources().length;u++)if(model.datasources()[u].source===t()){for(f=0;f<model.datasources()[u].currencies.length;f++)model.datasources()[u].currencies[f].name===i()&&(e=model.datasources()[u].currencies[f].rate),model.datasources()[u].currencies[f].name===r()&&(o=model.datasources()[u].currencies[f].rate);break}if(e>0)return(n()*(o/e)).toFixed(2)}return 0}function changeTabs(n){for(var i=$("a.nav-link.currencyTab"),t=0;t<i.length;t++)i[t].id===n.id?($("#"+i[t].id+"Panel").show(),$(i[t]).addClass("active")):($("#"+i[t].id+"Panel").hide(),$(i[t]).removeClass("active"))}var model=new ViewModel;$(document).ready(function(){function n(){$.ajax("/api/v1/datasources").done(function(n){i(n)}).fail(function(){console.log("failed to get data sources")})}function t(n){function t(n,t){for(var e,f,r={source:t.dataSourceName,currencies:[]},u=Object.keys(n[0]),i=0;i<n.length;i++)e={name:n[i][u[0]],rate:n[i][u[2]]},model.listOfCurrencies.push(n[i][u[0]]),r.currencies.push(e);for(model.datasources.push(r),f=model.listOfCurrencies().filter((n,t)=>model.listOfCurrencies.indexOf(n)===t),model.listOfCurrencies.removeAll(),i=0;i<f.length;i++)model.listOfCurrencies.push(f[i]);model.listOfProviders.push(r.source)}$.ajax({url:"https://"+n.dataSourceUrl,type:"GET",crossDomain:!0,dataType:"json",source:n,success:function(i){t(i,n)},error:function(){alert("failed to get rates")}})}function i(n){for(var i=0;i<n.length;i++)t(n[i])}ko.applyBindings(model);n()});